var e,t,r=(e,t,r)=>{if(!t.has(e))throw TypeError("Cannot "+r)},a=(e,t,a)=>(r(e,t,"read from private field"),a?a.call(e):t.get(e)),s=(e,t,r)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,r)},i=(e,t,a,s)=>(r(e,t,"write to private field"),s?s.call(e,a):t.set(e,a),a);import{c as n}from"./vendor.7bdb524c.js";const l={score:null,current_player:1,last_move:null,board:new Array(3).fill(0).map((()=>new Array(3).fill(0).map((()=>new Array(3).fill(0).map((()=>new Array(3).fill(0))))))),acquired:new Array(3).fill(0).map((()=>new Array(3).fill(0)))},o=class{constructor(r=l){s(this,e,void 0),s(this,t,void 0),i(this,e,n(r)),i(this,t,this.calculateAvailable())}static transposeBlock(e){return e[0].map(((t,r)=>e.map((e=>e[r]))))}static isAcquired(e,t){return!!e.map((e=>e.every((e=>e==t)))).some((e=>e))||(!!o.transposeBlock(e).map((e=>e.every((e=>e==t)))).some((e=>e))||(!!e.map(((e,t)=>e[t])).every((e=>e==t))||!!e.map(((t,r)=>t[e.length-r-1])).every((e=>e==t))))}get available(){let t=new Array(this.constructor.n_actions).fill(!0);if(null!=a(this,e).last_move){let{r:r,c:s}=a(this,e).last_move,i=(0==a(this,e).acquired[r][s]?[[r,s]]:[...a(this,e).acquired.map(((e,t)=>e.map(((e,r)=>0==e?[t,r]:null)))).flat().filter((e=>e))]).map((([t,r])=>a(this,e).board[t][r].map(((e,a)=>e.map(((e,s)=>0==e?27*t+9*r+3*a+s:null)))))).flat().flat().filter((e=>null!=e));t=t.map(((e,t)=>i.includes(t)))}return t}get board(){return a(this,e).board}get acquired(){return a(this,e).acquired}get action(){return a(this,e).last_move}static get n_actions(){return 81}get score(){return a(this,e).score}get player(){return a(this,e).current_player}clone(){return new o(a(this,e))}move(r){if(null!=a(this,e).score)throw`The game is already finished with a ${{0:"draw",1:"winner 'x'","-1":"winner 'o'"}[a(this,e).score]}`;let s=parseInt(r/27),n=parseInt((r-27*s)/9),l=parseInt((r-27*s-9*n)/3),c=r-27*s-9*n-3*l;if(r<0||r>80||!a(this,t)[s][n]||0!=a(this,e).board[s][n][l][c])throw`Invalid move ${r} { R: ${s}, C: ${n}, r: ${l}, c: ${c} }`;a(this,e).last_move={R:s,C:n,r:l,c:c},a(this,e).board[s][n][l][c]=a(this,e).current_player,a(this,e).acquired[s][n]=0!=a(this,e).acquired[s][n]?a(this,e).acquired[s][n]:o.isAcquired(a(this,e).board[s][n],a(this,e).current_player)?a(this,e).current_player:a(this,e).board[s][n].flat().includes(0)?0:2,a(this,e).score=o.isAcquired(a(this,e).acquired,a(this,e).current_player)?a(this,e).current_player:a(this,e).acquired.flat().some((e=>0==e))?null:0,a(this,e).current_player*=null==a(this,e).score?-1:1,i(this,t,this.calculateAvailable())}render(){console.log("***** Board ************* Acquired ********* Available **\n");let r=a(this,t),s=[...Array(3).keys()].map((t=>" "+[...Array(3).keys()].map((r=>[...Array(3).keys()].map((s=>a(this,e).board[t][s][r].map((e=>({1:"x","-1":"o",0:" "}[e]))).join(""))).join(" | "))).join(" \n ")+" \n")).join("-----+-----+-----\n").split("\n"),i=a(this,e).acquired.map((e=>" "+e.map((e=>({1:"x","-1":"o",0:" ",2:"-"}[e]))).join(" | ")+" ")).join("\n---+---+---\n").split("\n");r=r.map((e=>" "+e.map((e=>e?" ":"-")).join(" | ")+" ")).join("\n---+---+---\n").split("\n"),console.log(i.map(((e,t)=>[s[t],e,r[t]].join("        "))).concat(s.slice(i.length)).join("\n"))}calculateAvailable(){if(null==a(this,e).last_move)return new Array(3).fill(!0).map((()=>new Array(3).fill(!0)));let t,{r:r,c:s}=a(this,e).last_move;return 0==a(this,e).acquired[r][s]?(t=new Array(3).fill(!1).map((()=>new Array(3).fill(!1))),t[r][s]=!0):t=a(this,e).acquired.map((e=>e.map((e=>0==e)))),t}};let c=o;e=new WeakMap,t=new WeakMap;const u="https",h="ultimate-tic-tac-toe.dibyendu-das.repl.co",p=(e,t,r,a=(()=>console.log("websocket connected")),s=(()=>console.log("websocket disconnected")),i=2e3)=>{if(e)e.onopen=a,e.onmessage=e=>{let{isTrusted:t,data:a}=e;t&&r(JSON.parse(a))},e.onclose=s,e.onerror=e=>{console.error(e),t(null)};else{let l=null;try{l=new WebSocket("wss://ultimate-tic-tac-toe.dibyendu-das.repl.co/ping"),t(l)}catch(n){console.error(n),setTimeout((()=>p(e,t,r,a,s,i)),i)}}return()=>{e&&(e.close(),t(null))}};function d(e){if(e.status>=200&&e.status<300)return e;const t=new Error(`HTTP Error ${e.statusText}`);throw t.status=e.status,t.statusText=e.statusText,console.error(t),t}function m(e){return e.json()}export{h as B,c as G,u as P,d as c,m as p,p as s};
